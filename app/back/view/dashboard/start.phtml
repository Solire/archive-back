


<style>

    div.innerDetails { display: none }

    #tableau-<?php echo $this->name ?> td {
        overflow: hidden; /* this is what fixes the expansion */
        white-space: normal;
        word-wrap: break-word;
        max-width: 400px;


    }
    thead input { width: 100% }
    input.search_init { color: #999;font-size : 11px; }

    select.select_filter {max-width: 100px;font-size : 11px;}



    #tableau-<?php echo $this->name ?> table { width: 100%;}
    /*    #tableau-<?php echo $this->name ?> table tr { 
            background-color: transparent;
             Fonctionne déjà sur webkit 
            -webkit-transition-property: background-color;
            -webkit-transition-duration: 1s;
    
             Bientôt supporté par Firefox 
            -moz-transition-property: background-color;
            -moz-transition-duration: 1s;
    
             … et lorsque ce sera standardisé 
            transition-property: background-color;
            transition-duration: 1s;
    
        } */


    #tableau-<?php echo $this->name ?> table a { text-decoration: underline; }
    #tableau-<?php echo $this->name ?> table tr  >  td { border: 0px;text-align: left;vertical-align: top;  }
    #tableau-<?php echo $this->name ?> table tr  >  td:first-child {  padding-left: 50px;width: 100px;font-weight: bold;  }
    #tableau-<?php echo $this->name ?> table  >  tbody {
        border-top: 0px dotted #333333;
    }
    #tableau-<?php echo $this->name ?> table  >  tbody tr:hover {
        background-color: #4A9DD7;
        color: #FFF;
    }
    #tableau-<?php echo $this->name ?> tbody tr.even, #tableau-<?php echo $this->name ?> tbody tr.odd,
    #tableau-<?php echo $this->name ?> tbody tr.even td a, #tableau-<?php echo $this->name ?> tbody tr.odd td a{
        color: #000;

    }
    #tableau-<?php echo $this->name ?> tbody tr.even:hover, #tableau-<?php echo $this->name ?> > tbody tr.even td.highlighted {
        background-color: #117ECA;
        color: #FFF;
    }

    #tableau-<?php echo $this->name ?> tbody tr.even:hover > td >  a, #tableau-<?php echo $this->name ?> > tbody tr.even td.highlighted > a {
        color: #FFF;
    }


    #tableau-<?php echo $this->name ?> tbody tr.odd:hover, #tableau-<?php echo $this->name ?> > tbody tr.odd td.highlighted {
        background-color: #117ECA;
        color: #FFF;
    }

    #tableau-<?php echo $this->name ?> tbody tr.odd:hover > td > a, #tableau-<?php echo $this->name ?> > tbody tr.odd td.highlighted > a {
        color: #FFF;
    }


    #tableau-<?php echo $this->name ?> tr.even:hover {
        background-color: #117ECA;
        color: #FFF;
    }

    #tableau-<?php echo $this->name ?> tr.even:hover > td.sorting_1 {
        background-color: #117ECA;
        color: #FFF;
    }

    #tableau-<?php echo $this->name ?> tr.even:hover > td.sorting_2 {
        background-color: #117ECA;
        color: #FFF;
    }

    #tableau-<?php echo $this->name ?> tr.even:hover > td.sorting_3 {
        background-color: #E2FF89;
        color: #FFF;
    }

    #tableau-<?php echo $this->name ?> tr.odd:hover {
        background-color: #117ECA;
        color: #FFF;
    }

    #tableau-<?php echo $this->name ?> tr.odd:hover > td.sorting_1 {
        background-color: #117ECA;
        color: #FFF;
    }

    #tableau-<?php echo $this->name ?> tr.odd:hover > td.sorting_2 {
        background-color: #117ECA;
        color: #FFF;
    }

    #tableau-<?php echo $this->name ?> tr.odd:hover > td.sorting_3 {
        background-color: #117ECA;
        color: #FFF;
    }

    .ColVis {
        float: left;
        margin-bottom: 0
    }

    img.detail, img.ajax-click-load {
        cursor: pointer;
    }



    .ColVis_Button {
        height: 24px;
    }


    div.ColVis_collection button.ColVis_Button {
        height: 34px;
    }

    #tableau-<?php echo $this->name ?>_length, #tableau-<?php echo $this->name ?>_filter {
        clear: right;
    }

    #tableau-<?php echo $this->name ?>_processing {
        border : 0px;
    }

    #tableau-<?php echo $this->name ?>_filter {
        float:right;
    }

    div.DTTT_container {
        float: right;
    }


    .dataTables_length {
        width: auto;
    }

    tfoot th input { width: 90% }


</style>


</style>





<?php
if (isset($_GET["nomain"]) && $_GET["nomain"] == 1) {
    ?>

    <?php
} else {
    ?>
    <h1><?php echo $this->config["table"]["title"] ?></h1>
    <?php $this->add('breadcrumbs.phtml'); ?>
    <?php
}
?>



<?php
if ($_GET["name"] == "client") {
    ?>
    <div style="float:left;margin-right:10px;">
        <a class="button vert" href="page/display.html?id_gabarit=15">
            <span class="vert">Client</span>
        </a>
    </div>
    <?php
}
?>

<?php
if ($_GET["name"] == "commande") {
    ?>
    <div style="float:left;margin-right:10px;">
        <a class="button vert" href="page/display.html?id_gabarit=16">
            <span class="vert">Bon de commande</span>
        </a>
    </div>
    <?php
}
?>


<table cellpadding="0" width="100%" cellspacing="0" border="0" class="display" style="margin-top:0px;" class="shin-datatable" id="tableau-<?php echo $this->name ?>">
    <thead>
        <tr>
            <?php
            $details = "";
            $filterIndividualColumn = null;
            $filterIndividualColumnShow = false;

            if (isset($this->config["table"]["detail"]) && $this->config["table"]["detail"]) {
                $filterIndividualColumn .= '<td></td>';
                ?>
                <th></th>
                <?php
            }
            ?>
            <?php
            $keyAjust = 0;
            foreach ($this->config["columns"] as $key => $column) {
                if (!isset($column["show_detail"]) && !isset($column["show"]))
                    $keyAjust++;
                if (isset($this->config["table"]["detail"]) && $this->config["table"]["detail"])
                    if ((isset($column["show_detail"]) && $column["show_detail"]))
                        $details[] = $column["title"] . "|" . ($key + 1 - $keyAjust);
                if (isset($column["show"]) && $column["show"] || isset($column["show_detail"]) && $column["show_detail"]) {
                    $filterIndividualColumn .= '<td>';
                    ?>

                    <th  class="
                    <?php echo isset($column["editable"]) && $column["editable"] ? "editable" : ""; ?>
                    <?php echo isset($column["editable_field"]) ? "editable-" . $column["editable_field"] : ""; ?>
                    <?php echo isset($column["nl2br"]) ? "editable-br2nl" : ""; ?>
                         " width="25%"><?php echo $column["title"]; ?></th>

                    <?php
                    if (isset($column["filter_field"]) && $column["filter_field"]) {
                        $filterIndividualColumnShow = true;
                        $filterIndividualColumn .= '<input style="width:100%;" type="text" name="search_' . $column["name"] . '" value="Recherche par ' . $column["title"] . '" class="search_init" />';
                    }
                    ?>



                    <?php
                    $filterIndividualColumn .= '</td>';
                }
            }
            ?>

        </tr>

        <?php
        if ($filterIndividualColumnShow && 0) {
            ?>
            <tr><?php echo $filterIndividualColumn; ?></tr>
            <?php
        }
        ?>

    </thead>
    <tbody>

    </tbody>
    <tfoot>
        <tr>
            <?php
            if (isset($this->config["table"]["detail"]) && $this->config["table"]["detail"]) {
                $filterIndividualColumn .= '<td></td>';
                ?>
                <th></th>
                <?php
            }

            foreach ($this->config["columns"] as $column) {
                if (isset($column["show"]) && $column["show"] || isset($column["show_detail"]) && $column["show_detail"]) {
                    ?>
                    <th width="25%"><?php echo $column["title"]; ?></th>
                    <?php
                }
            }
            ?>
        </tr>
    </tfoot>
</table>
<script type="text/javascript">
    
    
    var anOpen_<?php echo $this->name ?> = [];
    var anOpen_<?php echo $this->name ?>Id = [];
    var anOpen_<?php echo $this->name ?>2 = [];
    var anOpen_<?php echo $this->name ?>2Id = [];
    
    // get visible columns
    $.fn.getColumnsShown = function(dTable)
    {
        vCols = new Array();

        $.each(dTable.fnSettings().aoColumns, function(c){
            if(dTable.fnSettings().aoColumns[c].bVisible == true){
                vCols = vCols.concat(c)
            }
        });

        return vCols;
    }

    
    var oTable_<?php echo $this->name ?>;
    $(document).ready(function() {
        
        
        
        //        /* Add the events etc before DataTables hides a column */
        //        $("thead input").keyup( function () {
        //            /* Filter on the column (the index) of this element */
        //            oTable.fnFilter( this.value, oTable.oApi._fnVisibleToColumnIndex( 
        //            oTable.fnSettings(), $(this).parent().index() ) );
        //        } );
        //	
        //        /*
        //         * Support functions to provide a little bit of 'user friendlyness' to the textboxes
        //         */
        //        $("thead input").each( function (i) {
        //            this.initVal = this.value;
        //        } );
        //	
        //        $("thead input").focus( function () {
        //            if ( this.className == "search_init" )
        //            {
        //                this.className = "";
        //                this.value = "";
        //            }
        //        } );
        //	
        //        $("thead input").blur( function (i) {
        //            if ( this.value == "" )
        //            {
        //                this.className = "search_init";
        //                this.value = this.initVal;
        //            }
        //        } );
        
        
        
<?php
if (isset($this->config["table"]["detail"]) && $this->config["table"]["detail"]) {
    ?>
                /* Details */
                function fnFormatDetails ( oTable_<?php echo $this->name ?>, nTr )
                {
                    var aData = oTable_<?php echo $this->name ?>.fnGetData( nTr );
                    var sOut = '<div class="innerDetails">'+'<table cellpadding="5" cellspacing="0" border="0" style="padding-left:50px;">';
    <?php
    if (is_array($details) && count($details) > 0)
        foreach ($details as $detail) {
            list($detailName, $detailId) = explode("|", $detail);
            ?>
                                    if(aData[<?php echo $detailId; ?>] != '')
                                    sOut += '<tr><td><?php echo $detailName; ?></td><td>'+aData[<?php echo $detailId; ?>]+'</td></tr>';

                                                                                                                                                                                                                                                                                                                                                                                                                                
            <?php
        }
    ?>
                    sOut += '</table>';
                                                                                                                                                                                         
                    return sOut;
                }
                                        
                $('#tableau-<?php echo $this->name ?> tbody td img.detail').live( 'click', function () {
                    var nTr = $(this).parents('tr')[0];
                    var i = $.inArray( nTr, anOpen_<?php echo $this->name ?> );
                    /* Only one open*/
                    //                    $(anOpen_<?php echo $this->name ?>).each( function () {
                    //                        if ( this !== nTr ) {
                    //                            $('td:first img', this).click();
                    //                        }
                    //                    } );
                    if ( i === -1 ) {
                        /* Open this row */
                        this.src = "img/back/details_close.png";
                        var odd="even";
                        if ($(nTr).hasClass("odd")) {
                            odd = "odd";
                        }
                        var nDetailsRow = oTable_<?php echo $this->name ?>.fnOpen( nTr, fnFormatDetails(oTable_<?php echo $this->name ?>, nTr), 'details-other' );
                                                                                
                        $('div.innerDetails', nDetailsRow).slideDown();
                        anOpen_<?php echo $this->name ?>.push( nTr );
                        anOpen_<?php echo $this->name ?>Id.push( $(nTr).attr("id") );
                        $(nDetailsRow).addClass(odd)
                        $("td", nDetailsRow).addClass("highlighted")
                        $(nDetailsRow).hover(function() {
                            var odd = "even";
                                                                                                                                
                            if ($(nTr).hasClass("odd")) {
                                odd = "odd";
                            }
                            if ($(nTr).hasClass(odd)) {
                                $(nTr).find("td").addClass("highlighted")
                            }
                                                                                                                                
                        },function() {
                            var odd = "even"
                            if ($(nTr).hasClass("odd")) {
                                odd = "odd";
                            }
                            if ($(nTr).hasClass(odd)) {
                                $(nTr).find("td").removeClass("highlighted")
                            }
                        })
                                                                                
                        $(".ajax-load", nDetailsRow).each(function() {
                            loadAjax($(this), $(nTr).attr("id"));
                        })
                                                                        
                        $(".ajax-click-load", nDetailsRow).each(function() {
                            $(this).bind('click', function() {
                                var j = $.inArray( this, anOpen_<?php echo $this->name ?>2 );
                                if ( j === -1 ) {
                                    this.src = "img/back/details_close.png";
                                    anOpen_<?php echo $this->name ?>2.push( this );
                                    anOpen_<?php echo $this->name ?>2Id.push( $(this).attr("id") );
                                    loadAjax($(this).parent().find(".ajax-on-click"), $(nTr).attr("id"));
                                    $(this).parent().find(".ajax-on-click").slideDown();
                                } else {
                                    this.src = "img/back/details_open.png";
                                    anOpen_<?php echo $this->name ?>2.splice( j, 1 );
                                    anOpen_<?php echo $this->name ?>2Id.splice( j, 1 );
                                    $(this).parent().find(".ajax-on-click").slideUp();
                                }
                            })
                                                                        
                                                                            
                                                                            
                        })
                                                                                
                                                                                
                                                                                                                
                    }
                    else {
                        /* This row is already open - close it */
                        this.src = "img/back/details_open.png";
                        $('div.innerDetails', $(nTr).next()[0]).slideUp( function () {
                            oTable_<?php echo $this->name ?>.fnClose( nTr );
                            anOpen_<?php echo $this->name ?>.splice( i, 1 );
                            anOpen_<?php echo $this->name ?>Id.splice( i, 1 );
                        } );
                    }
                                                                                                                                           
                } );
                /* Fin détails */
    <?php
}
?>
        
        
        
        
        oTable_<?php echo $this->name ?> = $('#tableau-<?php echo $this->name ?>').dataTable( {
<?php if (isset($this->config["table"]["pagination"]) && !$this->config["table"]["pagination"]) { ?>
                "bPaginate": false,
                "iDisplayLength": -1,
<?php } ?>
<?php if (isset($this->config["table"]["info"]) && !$this->config["table"]["info"]) { ?>
                "bInfo": false,
<?php } ?>
    
<?php if (isset($this->config["table"]["filter"]) && !$this->config["table"]["filter"]) { ?>
                "bFilter": false,
<?php } ?>
    
    
    
            'oLanguage': {
                "sProcessing": '<img src="img/ajax-loader.gif" />',
                "sLengthMenu": "Montrer _MENU_ <?php echo $this->config["table"]["title_item"] ?>s par page",
                "sZeroRecords": "Aucun<?php echo $this->config["table"]["suffix_genre"] ?> <?php echo $this->config["table"]["title_item"] ?> trouvé<?php echo $this->config["table"]["suffix_genre"] ?>",
                "sEmptyTable": "Pas de <?php echo $this->config["table"]["title_item"] ?>",
                "sInfo": "<?php echo $this->config["table"]["title_item"] ?>s _START_ à  _END_ sur _TOTAL_ <?php echo $this->config["table"]["title_item"] ?>s",
                "sInfoEmpty": "Aucun<?php echo $this->config["table"]["suffix_genre"] ?> <?php echo $this->config["table"]["title_item"] ?>",
                "sInfoFiltered": "(filtre sur _MAX_ <?php echo $this->config["table"]["title_item"] ?>s)",
                "sInfoPostFix": "",
                "sSearch": "Chercher:",
                "sUrl": "",
                "oPaginate": {
                    "sFirst": "",
                    "sPrevious": "",
                    "sNext": "",
                    "sLast": ""
                }
            },
            "aaSorting": [
<?php
$numCol = 0;
foreach ($this->config["columns"] as $column) {
    
    if (isset($column["show"]) && $column["show"]) {
        ?>
        <?php
        if (isset($column["default_sorting"]) && $column["default_sorting"]) {
            ?>
                                        [ <?php echo isset($this->config["table"]["detail"]) && $this->config["table"]["detail"] ? $numCol + 1 : $numCol; ?>, "<?php echo $column["default_sorting_direction"]; ?>" ],        
            <?php
        } else {
            ?>
            <?php
        }
        $numCol++;
    }
}
?>
            ],
            "aoColumns": [
<?php
if (isset($this->config["table"]["detail"]) && $this->config["table"]["detail"])
    echo '{ "bSortable": false},';
?>
                
<?php
foreach ($this->config["columns"] as $column) {
    $numCol = 0;
    if (isset($column["show"]) && $column["show"] || isset($column["show_detail"]) && $column["show_detail"]) {
        ?>
        <?php
        if (isset($column["show_detail"]) && $column["show_detail"] && (!isset($column["show"]) || !$column["show"])) {
            ?>
                                        { "bVisible":    false },
            <?php
        } else {
            if (!isset($column["special"])) {
                ?>
                                                null,
                <?php
            } else {
                ?>
                                                { "bSortable": false},
                <?php
            }
        }
        $numCol++;
    }
}
?>
            ],
<?php
if (isset($this->config["table"]["detail"]) && $this->config["table"]["detail"])
    
    ?>
                
                //                "fnPreDrawCallback": function (oSettings) {
                //                    /* Fermer les details a chaque modification */
                //                    $("#tableau-<?php echo $this->name ?> tr td:first img[src$='details_close.png']").click();
                //                },
                "fnDrawCallback": function() {
                    /* Save state open detail */
                    if(anOpen_<?php echo $this->name ?>Id) {
                        anOpen_<?php echo $this->name ?>Id2 = anOpen_<?php echo $this->name ?>Id;
                        anOpen_<?php echo $this->name ?>Id = []
                    
                        for(id in anOpen_<?php echo $this->name ?>Id2) {
                            item = anOpen_<?php echo $this->name ?>Id2[id]
                            if($('#' + item + ' td:first img').length > 0) {
                                //                            anOpen_<?php echo $this->name ?>.splice( id, 1 );
                                //                            anOpen_<?php echo $this->name ?>Id.splice( id, 1 );
                                $('#' + item + ' td:first img').click();
                            }
                        
                        };
                    }
                    
                    
                
      
                },
<?php ?>
            "sDom": '<"H"TClfr>t<"F"ip>',
            "bJQueryUI": true,
            "bSortCellsTop": true,
            "bProcessing": true,
            "bServerSide": true,
            "oTableTools": {
                "sSwfPath": "<?php echo $this->Url; ?>swf/back/copy_cvs_xls_pdf.swf",
                "aButtons": [
<?php
if (isset($this->config["extra"]) && isset($this->config["extra"]["copy"]) && $this->config["extra"]["copy"]) {
    ?>
                            {
                                "sExtends":    "collection",
                                "sButtonText": "Copier",
                                "aButtons":    [  
                                    {
                                        "sExtends": "copy",
                                        "sButtonText": "Colonnes visibles",
                                        "sCharSet": "utf8",
                                        "mColumns": "visible"
                                    },
                                    {
                                        "sExtends": "copy",
                                        "sButtonText": "Toutes colonnes",
                                        "sCharSet": "utf8",
                                        "mColumns": "all"
                                    }
                                ]
                            },
    <?php
}
?>
<?php
if (isset($this->config["extra"]) && isset($this->config["extra"]["print"]) && $this->config["extra"]["print"]) {
    ?>
                            {
                                "sExtends": "print",
                                "sButtonText": "Imprimer",
                                "sCharSet": "utf8",
                                "mColumns": "all"
                            },
    <?php
}
?>
<?php
if (isset($this->config["extra"]) && isset($this->config["extra"]["pdf"]) && $this->config["extra"]["pdf"]) {
    ?>
                            {
                                "sExtends":    "collection",
                                "sButtonText": "PDF",
                                "aButtons":    [  
                                    {
                                        "sExtends": "pdf",
                                        "sButtonText": "Colonnes visibles",
                                        "sPdfOrientation": "landscape",
                                        "sCharSet": "utf8",
                                        "mColumns": "visible"
                                    },
                                    {
                                        "sExtends": "pdf",
                                        "sButtonText": "Toutes colonnes",
                                        "sPdfOrientation": "landscape",
                                        "sCharSet": "utf8",
                                        "mColumns": "all"
                                    }
                                ]
                            },
    <?php
}
?>
<?php
if (isset($this->config["extra"]) && isset($this->config["extra"]["csv"]) && $this->config["extra"]["csv"]) {
    ?>
                            {
                                "sExtends":    "collection",
                                "sButtonText": "CSV",
                                "aButtons":    [  
                                    {
                                        "sExtends": "csv",
                                        "sButtonText": "Colonnes visibles",
                                        "sCharSet": "utf8",
                                        "mColumns": "visible"
                                    },
                                    {
                                        "sExtends": "csv",
                                        "sButtonText": "Toutes colonnes",
                                        "sCharSet": "utf8",
                                        "mColumns": "all"
                                    }
                                ]
                            },
    <?php
}
?>
                    
                    
                    
                    
                    
                ]
            },
<?php
if (isset($this->config["extra"]) && isset($this->config["extra"]["hide_columns"]) && $this->config["extra"]["hide_columns"]) {
    ?>
                    "oColVis": {
    <?php
    if (isset($this->config["table"]["detail"]) && $this->config["table"]["detail"])
        echo ' "aiExclude": [ 0 ],';
    ?>
                                                                                        
                        "buttonText": "Cacher des colonnes"
                    },
    <?php
}
?>
            
            
            "sAjaxSource": "<?php echo $_GET["controller"]; ?>/json.html?name=<?php echo $_GET["name"]; ?>&<?php echo $this->additionalParams ?>"
            

        } ).columnFilter({
<?php
if (isset($this->config["extra"]) && isset($this->config["extra"]["hide_columns"]) && $this->config["extra"]["hide_columns"]) {
    ?>
                    bUseColVis: true,
    <?php
}
?>

            aoColumns: [ 
<?php
if (isset($this->config["table"]["detail"]) && $this->config["table"]["detail"])
    echo ' null,';
?>
               
<?php
foreach ($this->config["columns"] as $column) {
    $numCol = 0;
    if (isset($column["show"]) && $column["show"] || isset($column["show_detail"]) && $column["show_detail"]) {
        ?>
        <?php
        if (!isset($column["filter_field"])) {
            ?>
                                        null,
            <?php
        } else if ($column["filter_field"] == "text") {
            ?>
                                        { type: "text"},

            <?php
        } else if ($column["filter_field"] == "select") {
            ?>
                                        { type: "select", values : <?php echo json_encode($column["values"]); ?>},
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    
            <?php
        }
        $numCol++;
    }
}
?> ] });
                
                $('td', oTable_<?php echo $this->name ?>.fnGetNodes()).livequery(function() {
                    $(this).hover(function() {
                        var odd = "even"
                        if ($(this).parent().hasClass("odd")) {
                            odd = "odd";
                        }
                        if ($(this).parent().next().hasClass(odd)) {
                            $(this).parent().next().find(" > td").addClass("highlighted")
                        }
                        
                    },function() {
                        var odd = "even"
                        if ($(this).parent().hasClass("odd")) {
                            odd = "odd";
                        }
                        if ($(this).parent().next().hasClass(odd)) {
                            $(this).parent().next().find("td").removeClass("highlighted")
                        }
                    })
                    
                    
                    if(!$("#tableau-<?php echo $this->name ?> thead tr th").eq($(this).index()).hasClass("editable"))
                    return true;
                    /* Apply the jEditable handlers to the table */
                    var type = $("#tableau-<?php echo $this->name ?> thead tr th").eq($(this).index()).hasClass("editable-textarea") ? 'textarea' : "text" ;
                    type = $("#tableau-<?php echo $this->name ?> thead tr th").eq($(this).index()).hasClass("editable-autogrow") ? 'autogrow' : type ;
                    $(this).editable( '<?php echo $_GET["controller"]; ?>/editable.html?name=<?php echo $_GET["name"]; ?>'  , {
                        type      : type,
                        br2nl      : $("#tableau-<?php echo $this->name ?> thead tr th").eq($(this).index()).hasClass("editable-br2nl") ? true : false ,
                        cancel    : type != "input" ? 'Annuler' : null ,
                        submit    : type != "input" ? 'Enregistrer' : null ,
                        indicator : 'Sauvegarde en cours ...',
                        placeholder   : 'Cliquer pour éditer ...',
                        tooltip :  'Cliquer pour éditer ...',
                        "callback": function( sValue, y ) {
                            var aPos = oTable_<?php echo $this->name ?>.fnGetPosition( this );
                            oTable_<?php echo $this->name ?>.fnUpdate( sValue, aPos[0], aPos[1]);
                        },
                        data: function(value, settings) {
                            /* Convert <br> to newline. */
                            var retval = value;
                            if(settings.br2nl)
                                var retval = value.br2nl();
                                
                            return retval;
                        },
                        "submitdata": function ( value, settings ) {
                            return {
                                "row_id": this.parentNode.getAttribute('id'),
                                "column": oTable_<?php echo $this->name ?>.fnGetPosition( this )[2]
                            };
                        },
                        "width" : "100%",
                        "onblur"    : type != "input" ? "ignore" : null,
                        "height": type == "textarea" ? '100px' : "14px"
                    } );
                })
        
<?php
if (isset($this->config["table"]["fixedheader"]) && $this->config["table"]["fixedheader"]) {
    ?>
                        new FixedHeader( oTable_<?php echo $this->name ?>, { "bottom": false } );
    <?php
}
?>
        
            });
    
            function loadAjax($elem, id) {
                var filter = $elem.attr("data-filter")
                filter = filter.replace("[INDEX]", id)
                var url = $elem.attr("rel") + "&" + filter;
                $elem.load(url)
            }
            
            
            // Convert HTML breaks to newline
            String.prototype.br2nl =
                function() {
                return this.replace(/<br\s*\/?>/mg,"\n");
            };
    
</script>


