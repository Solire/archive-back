
<style>
    #tableau td {
        overflow: hidden; /* this is what fixes the expansion */
        white-space: normal;
        word-wrap: break-word;
        max-width: 400px;

    }
    thead input { width: 100% }
    input.search_init { color: #999;font-size : 11px; }
</style>


</style>

<form>
    <select name="id_version" method="get" onchange="$(this).parent().submit()">
        <?php
        foreach ($this->versions as $version) {
            ?>
            <option <?php echo BACK_ID_VERSION == $version['id'] ? 'selected="selected"' : ''; ?> value="<?php echo $version['id'] ?>"><?php echo $version['nom'] ?></option>
            <?php
        }
        ?>
    </select>
</form>

<h1><?php echo $this->config["table"]["title"] ?></h1>



<table cellpadding="0" width="100%" cellspacing="0" border="0" class="display" style="margin-top:0px;" id="tableau">
    <thead>
        <tr>
            <?php
            $filterIndividualColumn = null;
            $filterIndividualColumnShow = false;
            foreach ($this->config["columns"] as $column) {
                if (isset($column["show"]) && $column["show"]) {
                    $filterIndividualColumn .= '<td>';
                    ?>

                    <th  class="<?php echo isset($column["editable"]) && $column["editable"] ? "editable" : ""; ?>" width="25%"><?php echo $column["title"]; ?></th>

                    <?php
                    if (isset($column["filter_field"]) && $column["filter_field"]) {
                        $filterIndividualColumnShow = true;
                        $filterIndividualColumn .= '<input style="width:100%;" type="text" name="search_' . $column["name"] . '" value="Recherche par ' . $column["title"] . '" class="search_init" />';
                    }
                    ?>



                    <?php
                    $filterIndividualColumn .= '</td>';
                }
            }
            ?>

        </tr>

        <?php
        if ($filterIndividualColumnShow) {
            ?>
            <tr><?php echo $filterIndividualColumn; ?></tr>
            <?php
        }
        ?>

    </thead>
    <tbody>

    </tbody>
    <tfoot>
        <tr>
            <?php
            foreach ($this->config["columns"] as $column) {
                if (isset($column["show"]) && $column["show"]) {
                    ?>
                    <th width="25%"><?php echo $column["title"]; ?></th>
                    <?php
                }
            }
            ?>
        </tr>
    </tfoot>
</table>
<script type="text/javascript">
                
    $(document).ready(function() {
        
        
        /* Add the events etc before DataTables hides a column */
        $("thead input").keyup( function () {
            /* Filter on the column (the index) of this element */
            oTable.fnFilter( this.value, oTable.oApi._fnVisibleToColumnIndex( 
            oTable.fnSettings(), $(this).parent().index() ) );
        } );
	
        /*
         * Support functions to provide a little bit of 'user friendlyness' to the textboxes
         */
        $("thead input").each( function (i) {
            this.initVal = this.value;
        } );
	
        $("thead input").focus( function () {
            if ( this.className == "search_init" )
            {
                this.className = "";
                this.value = "";
            }
        } );
	
        $("thead input").blur( function (i) {
            if ( this.value == "" )
            {
                this.className = "search_init";
                this.value = this.initVal;
            }
        } );
        
        
        
        var oTable = $('#tableau').dataTable( {
            
            'oLanguage': {
                "sProcessing": "Chargement...",
                "sLengthMenu": "Montrer _MENU_ <?php echo $this->config["table"]["title_item"] ?>s par page",
                "sZeroRecords": "Aucun<?php echo $this->config["table"]["suffix_genre"] ?> <?php echo $this->config["table"]["title_item"] ?> trouvé<?php echo $this->config["table"]["suffix_genre"] ?>",
                "sEmptyTable": "Pas de <?php echo $this->config["table"]["title_item"] ?>",
                "sInfo": "<?php echo $this->config["table"]["title_item"] ?>s _START_ à  _END_ sur _TOTAL_ <?php echo $this->config["table"]["title_item"] ?>s",
                "sInfoEmpty": "Aucun<?php echo $this->config["table"]["suffix_genre"] ?> <?php echo $this->config["table"]["title_item"] ?>",
                "sInfoFiltered": "(filtre sur _MAX_ <?php echo $this->config["table"]["title_item"] ?>s)",
                "sInfoPostFix": "",
                "sSearch": "Chercher:",
                "sUrl": "",
                "oPaginate": {
                    "sFirst": "",
                    "sPrevious": "",
                    "sNext": "",
                    "sLast": ""
                }
            },
            "aaSorting": [
<?php
foreach ($this->config["columns"] as $column) {
    $numCol = 0;
    if (isset($column["show"]) && $column["show"]) {
        ?>
        <?php
        if (isset($column["default_sorting"]) && $column["default_sorting"]) {
            ?>
                                        [ <?php echo $numCol; ?>, "<?php echo $column["default_sorting_direction"]; ?>" ],        
            <?php
        } else {
            ?>
            <?php
        }
        $numCol++;
    }
}
?>
            ],
            "bJQueryUI": true,
            "bSortCellsTop": true,
            "bProcessing": true,
            "bServerSide": true,
            "sAjaxSource": "<?php echo $_GET["controller"]; ?>/json.html"
            

        } );
                
        $('td', oTable.fnGetNodes()).livequery(function() {
            if(!$("#tableau thead tr th").eq($(this).index()).hasClass("editable"))
                return true;
            /* Apply the jEditable handlers to the table */
            $(this).editable( '<?php echo $_GET["controller"]; ?>/editable.html', {
                indicator : 'Sauvegarde en cours ...',
                placeholder   : 'Cliquer pour éditer ...',
                "callback": function( sValue, y ) {
                    var aPos = oTable.fnGetPosition( this );
                    oTable.fnUpdate( sValue, aPos[0], aPos[1] );
                },
                "submitdata": function ( value, settings ) {
                    return {
                        "row_id": this.parentNode.getAttribute('id'),
                        "column": oTable.fnGetPosition( this )[2]
                    };
                },
                "height": "14px"
            } );
        })
        
    });
</script>